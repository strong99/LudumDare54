@using LudumDare54.Core;
@using LudumDare54.Core.Scenes;
@using LudumDare54.Core.States;
@using LudumDare54.Core.Tags;
@using Microsoft.JSInterop;
@{
    var deckCards = _repository.ResourceCards.Where(x => Session.Deck.Any(q => q == x.Id));
}
<div class="CardSelectionState" />

<div class="preview">
    <div class="inner" id="@_innerGuid">
        @{
            var list = RenderScene().OrderBy(i => i.Order).ToList();
            foreach (var item in list) {
                <img style="@($"left: {item.PositionX}%; top: {item.PositionY}%; transform-origin: {item.OriginX}% {item.OriginY}%; transform: translate(-{item.OriginX}%, -{item.OriginY}%) scale({item.Scale / 100})")" src="@item.File" />
            }
        }
    </div>
</div>

<p class="sceneDescription">
    @State.EventCard.Id
</p>

<ul class="deck options">
    @foreach (var card in deckCards) {
        Session.Deck ??= new();
        var selected = Session.Deck.Contains(card.Id);
        <li>
            <button class="@(State.Choice == card ? "selected" : "unselected")" @onclick="args=>{ OnCardSelect(); State.Choice = card; State.Finish(); }" @onmouseenter="OnCardHover">@card.Id</button>
        </li>
    }
</ul>
